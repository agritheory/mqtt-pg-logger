services:
  artemis:
    image: apache/activemq-artemis:latest-alpine
    ports:
      - 8161:8161 # Web Console
      - 61616:61616 # Main Messaging Port
      - 1883:1883 # MQTT Port
      - 8883:8883 # MQTT Port with TLS
    volumes:
    - ./certs:/etc/ssl/certs
    - ./etc-override:/var/lib/artemis-instance/etc-override # broker.xml override
    -  artemis-data:/var/lib/artemis-instance/data
    environment:
    - EXTRA_ARGS=--http-host 0.0.0.0 --relax-jolokia --ssl-key /etc/ssl/certs/[keystore.jks] --ssl-key-password [password] # Needed for Web Console HTTPs
    restart: unless-stopped

  mqtt-logger:
    build: .
    develop:
      watch:
        - action: rebuild
          path: .
    depends_on:
      - artemis
      - timescaledb
    environment:
      - MQTT_HOST=artemis.falk.host
      - MQTT_PORT=8883
      - MQTT_USER=artemis
      - MQTT_PASSWORD=artemis
      - DATABASE_HOST=timescaledb
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_NAME=postgres
      - DATABASE_PORT=5432
      - SSL_INSECURE=False
    restart: unless-stopped

  timescaledb:
    image: timescale/timescaledb:latest-pg16
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
      - TSDB_URL # Use the TSDB_URL environment variable for the domain
    volumes:
      - timescaledb-data:/var/lib/postgresql/data
      - ./letsencrypt:/etc/letsencrypt
    restart: unless-stopped
    entrypoint: ["/bin/ash", "-c"]
    command: |
      apk add --no-cache certbot
      certbot certonly --standalone -d $TSDB_URL
      echo "ssl = on" >> /etc/postgresql/postgresql.conf
      echo "ssl_cert_file = '/etc/letsencrypt/live/$TSDB_URL/fullchain.pem'" >> /etc/postgresql/postgresql.conf
      echo "ssl_key_file = '/etc/letsencrypt/live/$TSDB_URL/privkey.pem'" >> /etc/postgresql/postgresql.conf
      pg_ctl restart -D /var/lib/postgresql/data

  caddy:
    image: caddy:latest
    ports:
      - 80:80
      - 443:443
    environment:
      - CADDYFILE_CONTENT=
        $DOMAIN {
            reverse_proxy mqtt-logger:5000
        }
    command: run --config /etc/caddy/Caddyfile.json
    volumes:
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - app-network
    depends_on:
      - mqtt-logger
    restart: unless-stopped

volumes:
  artemis-data:
  caddy_data:
  caddy_config:
  timescaledb-data: