services:
  artemis:
    image: apache/activemq-artemis:latest-alpine
    networks:
      - app-network
    ports:
      - 8161:8161 # Web Console
      - 61616:61616 # Main Messaging Port
      - 1883:1883 # MQTT Port
      - 8883:8883 # MQTT Port with TLS
    # volumes: # Uncomment when using TLS
    # - ./certs:/etc/ssl/certs
    # - ./broker.xml:/var/lib/artemis-instance/etc-override/broker.xml
    # environment:
    # - EXTRA_ARGS=--http-host 0.0.0.0 --relax-jolokia --ssl-key /etc/ssl/certs/le_keystore.jks --ssl-key-password securepass
    environment:
     - EXTRA_ARGS=--http-host 0.0.0.0 --relax-jolokia
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8161"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  mqtt-logger:
    container_name: mqtt-logger  # Add this line
    build: .
    networks:
      app-network:
        aliases:
          - mqtt-logger  # Add this line
    ports:
      - "5000:5000"
    depends_on:
      - artemis
      - timescaledb
    environment:
      - CREATE_SCHEMA=1 # create table schema
      - HOST=0.0.0.0
      - PORT=5000
      - MQTT_HOST=artemis
      - MQTT_PORT=1883
      - MQTT_USER=artemis
      - MQTT_PASSWORD=artemis
      - DATABASE_HOST=timescaledb
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_NAME=postgres
      - DATABASE_PORT=5432
      - SSL_INSECURE=True # Set to False when using TLS
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  timescaledb:
    image: timescale/timescaledb:latest-pg16
    networks:
      - app-network
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  artemis-config:
